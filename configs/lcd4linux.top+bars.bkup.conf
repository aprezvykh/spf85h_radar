Display dpf {
   Driver     'SamsungSPF'
   Port       'usb0'
   Model      'SPF-85H'
   Font       '8x13'
   Foreground 'ffffff'
   Background '000000'
   Basecolor  '000000'
   Backlight 7
   Orientation 1
}

Widget OS {
    class 'Text'
    expression '*** '.uname('sysname').' '.uname('release').' - dpf driver by hackfin ***'
    width 21
    align 'M'
    speed 200
    update tick
    Background '008000'
    Foreground 'ffffff'
}

Widget CPU {
    class  'Text'
    expression  uname('machine')
    prefix 'CPU '
    width  10
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget RAM {
    class  'Text'
    expression meminfo('MemTotal')/1024
    postfix ' MB RAM'
    width  11
    precision 0
    align  'R'
    update tick
    Background 'FFFFFF00'
}

Widget Busy {
    class 'Text'
    expression proc_stat::cpu('busy', 500)
    prefix 'Busy'
    postfix '%'
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget BusyBar {
    class 'Bar'
    expression  proc_stat::cpu('busy',   500)
    expression2 proc_stat::cpu('system', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Load {
    class 'Text'
    expression loadavg(1)
    prefix 'Load'
    postfix loadavg(1)>1.0?'!':' '
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget LoadBar {
    class 'Bar'
    expression  loadavg(1)
    max 2.0
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}


Widget Disk {
    class 'Text'
    # disk.[rw]blk return blocks, we assume a blocksize of 512
    # to get the number in kB/s we would do blk*512/1024, which is blk/2
    # expression (proc_stat::disk('.*', 'rblk', 500)+proc_stat::disk('.*', 'wblk', 500))/2
    # with kernel 2.6, disk_io disappeared from /proc/stat but moved to /proc/diskstat
    # therefore you have to use another function called 'diskstats':
    expression diskstats('hd.', 'read_sectors', 500) + diskstats('hd.', 'write_sectors', 500)
    prefix 'disk'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget DiskBar {
    class 'Bar'
    #expression  proc_stat::disk('.*', 'rblk', 500)
    #expression2 proc_stat::disk('.*', 'wblk', 500)
    # for kernel 2.6:
    expression  diskstats('sd.', 'read_sectors',  500)
    expression2 diskstats('sd.', 'write_sectors', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Eth0 {
    class 'Text'
    expression (netdev('wlan0', 'Rx_bytes', 500)+netdev('wlan0', 'Tx_bytes', 500))/1024
    prefix 'wlan0'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget Eth0Bar {
    class 'Bar'
    expression  netdev('wlan0', 'Rx_bytes', 500)
    expression2 netdev('wlan0', 'Tx_bytes', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Uptime {
    class 'Text'
    expression uptime('%d days %H:%M:%S')
    width 20
    align 'R'
    prefix 'Up '
    update 1000
    Background 'FFFFFF00'
}

Widget row1 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==1"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row2 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==2"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row3 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==3"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row4 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==4"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row5 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==5"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row6 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==6"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row7 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==7"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row8 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==8"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row9 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==9"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row10 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==10"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row11 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==11"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row12 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==12"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row13 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==13"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row14 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==14"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row15 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==15"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}
Widget row16 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==16"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row17 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==17"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row18 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==18"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row19 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==19"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}

Widget row20 {
    class  'Text'
    expression  exec('ps aux --sort=-pcpu | awk "NR==20"', 100)
    width  98
    align  'L'
    update tick
    Background 'FFFFFF00'
}


###########
Display 'DPF'
##############

Layout mylayout {
    Row01.Col01 'OS'
    Row02.Col02 'CPU'
    Row03.Col10 'RAM'
    Row05.Col01 'Busy'
    Row06.Col01 'BusyBar'
    Row07.Col01 'Load'
    Row08.Col01 'LoadBar'
    Row09.Col01 'Disk'
    Row10.Col01 'DiskBar'
    Row11.Col01 'Eth0'
    Row12.Col01 'Eth0Bar'
    Row16.Col01 'Uptime'
    Row17.Col01 'row1'
    Row18.Col01 'row2'
    Row19.Col01 'row3'
    Row20.Col01 'row4'
    Row21.Col01 'row5'
    Row22.Col01 'row6'
    Row23.Col01 'row7'
    Row24.Col01 'row8'
    Row25.Col01 'row9'
    Row26.Col01 'row10'
    Row27.Col01 'row11'
    Row28.Col01 'row12'
    Row29.Col01 'row13'
    Row30.Col01 'row14'
    Row31.Col01 'row15'
    Row32.Col01 'row16'
    Row33.Col01 'row17'
    Row34.Col01 'row18'
    Row35.Col01 'row19'
    Row36.Col01 'row20'
}


Layout 'mylayout'

Variables {
        backlight 2
    tick 500
    tack 200
    minute 600
}
